package com.group14.irecycle.model;


import java.sql.Date;
import java.time.LocalDate;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

// Database user table
@Entity
@Table(name = "user")
public class User {
	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	private long id;

	@Column(nullable = false, unique = true)
	private String email;

	@Column(nullable = false, unique = true)
	private String username;

	@Column(nullable = false)
	private String password;

	@Column(nullable = false, name = "first_name")
	private String firstName;

	@Column(nullable = false)
	private String surname;

	@Column(nullable = false, unique = true, length = 11, name = "phone_number")
	private String phoneNo;

	@Column(nullable = false, name = "birth_date")
	private Date birthDate;

	// links to listing table
	@OneToMany(cascade = CascadeType.ALL, mappedBy = "user")
	@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"}) 
	private List<Listing> listings;

	// links join table for saved listings
	@ManyToMany(fetch = FetchType.LAZY, cascade = CascadeType.PERSIST)
	@JoinTable(name = "saved_listings", 
	joinColumns = {
			@JoinColumn(name = "user_id", referencedColumnName = "id", nullable = false, updatable = false)},
	inverseJoinColumns = {
			@JoinColumn(name = "listing_id", referencedColumnName = "id", nullable = false, updatable = false)})
	private Set<Listing> savedListings = new HashSet<>();

	public User() {}

	public User(String email, String username, String password, String firstName, String surname, String phoneNo, LocalDate birthDate) {
		super();
		this.email = email;
		this.username = username;
		this.password = password;
		this.firstName = firstName;
		this.surname = surname;
		this.phoneNo = phoneNo;
		this.birthDate = Date.valueOf(birthDate);
	}

	//setters for different date formats
	public void setBirthDate(LocalDate birthDate) {
		this.birthDate = Date.valueOf(birthDate);
	}

	public void setBirthDate(String birthDate) {
		this.birthDate = Date.valueOf(birthDate);
	}

	public void setBirthDate(Date birthDate) {
		this.birthDate = birthDate;
	}

	//autogenerated getters and setters
	public long getId() {
		return id;
	}

	public void setId(long id) {
		this.id = id;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public String getFirstName() {
		return firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	public String getSurname() {
		return surname;
	}

	public void setSurname(String surname) {
		this.surname = surname;
	}

	public String getPhoneNo() {
		return phoneNo;
	}

	public void setPhoneNo(String phoneNo) {
		this.phoneNo = phoneNo;
	}

	public Date getBirthDate() {
		return birthDate;
	}

	public List<Listing> getListings() {
		return listings;
	}

	public void setListings(List<Listing> listings) {
		this.listings = listings;
	}

	public Set<Listing> getSavedListings() {
		return savedListings;
	}

	public void setSavedListings(Set<Listing> savedListings) {
		this.savedListings = savedListings;
	}
}
